#!/bin/bash

SCRIPT_NAME="arch-vm-builder"
SCRIPT_DESCRIPTION="Create a new Arch Linux QEMU/KVM virtual machine."
SCRIPT_VERSION="0.1-dev"
SCRIPT_AUTHOR="Slithery"

# Script usage
#

usage () { cat <<-USAGETXT

    $SCRIPT_NAME
    v$SCRIPT_VERSION by $SCRIPT_AUTHOR

    $SCRIPT_DESCRIPTION

      USAGE:  $SCRIPT_NAME [OPTIONS] VAR1

      OPTIONS:  -h     Display this help.
                -V     Show version.

USAGETXT
}


# Options
#

while getopts :hV flag
    do
    case "$flag" in
    (h) usage; exit 0;;
    (V) echo "$SCRIPT_VERSION"; exit 0;;
#   (e) EXAMPLE_OPTION_SWITCH=1;;           # Add e to getopts string.
#   (f) EXAMPLE_OPTION_VARIABLE="$OPTARG";;     # Add f: to getopts string.
    (*) echo "Invalid option, use -h for help."; exit 1;;
    esac
    done

shift $(($OPTIND - 1))


# Check for argument
#

if [ -n "$1" ]
then
  VM_NAME=$1
else echo "VAR1 not present, use -h for help."; exit 1
fi


# Main script
#
echo "Main script here"
echo VM_NAME="$VM_NAME"

# Set variables
#
IMG_DIR=/mnt/data/vms
VM_RAM=1G
VM_HD_SIZE=8G
VM_IMG="$IMG_DIR"/"$VM_NAME".raw

# Create image
#
qemu-img create -f raw "$VM_IMG" "$VM_HD_SIZE"

# Partition image
#


# Loop mount image
#


# Create filesystems
#
mkfs.ext4 -L "$VM_NAME"-root /dev/loop0p1
mkswap -L "$VM_NAME"-swap /dev/loop0p2

# Mount root
#
sudo mkdir -p /mnt/"$VM_NAME"-root
sudo mount /dev/loop0p1 /mnt/"$VM_NAME"-root

# Pacstrap
#
sudo pacstrap -c -d /mnt/"$VM_NAME"-root base


exit 0

